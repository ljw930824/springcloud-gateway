server:
  port: 8081
  use-forward-headers: true
  tomcat:
    remote-ip-header: X-Real-IP
    protocol-header: X-Forwarded-Proto

info:
  version: @project.version@
  name: @project.artifactId@

# Apollo配置开始应用全局唯一的身份标识
app:
  id: test
# Apollo Meta Server 地址
apollo:
  meta: http://47.98.183.90:8080
  # 自定义本地配置文件缓存路径
  cacheDir: ./config
  # 设置在应用启动阶段就加载 Apollo 配置
  bootstrap:
    enabled: true
    # 注入 application namespace
    namespaces: application


spring:
  application:
    name: spring-cloud-gateway-core
  boot:
    admin:
      client:
        username: admin       #These two are needed so that the client
        password: admin   #can register at the protected server api
        url: http://localhost:8082
  cloud:
    #重试
    loadbalancer:
      retry:
        enabled: true
    gateway:
      #HTTPS 信任
      httpclient:
        ssl:
          useInsecureTrustManager: true
#          trustedX509Certificates:
#            - cert1.pem
#            - cert2.pem
#          handshake-timeout-millis: 10000
#          close-notify-flush-timeout-millis: 3000
#          close-notify-read-timeout-millis: 0
      discovery:
        locator:
          lower-case-service-id: true
      routes:
#        - id: after_route
#          uri: http://example.org
#          predicates:
#            - After=2018-01-20T06:06:06+08:00[Asia/Shanghai]
        - id: path_route
          uri: http://example.org
          predicates:
            - Path=/foo/{segment}
#          filters:
#            - name: CustomHystrix
#              args:
#                name: CustomHystrix
#                fallbackUri: forward:/fallback
#                timeout:
#                  order-remote: 100
  #        filters:
  #        - name: RateLimiter
  #          args:
  #            key-resolver: '#{@hostAddrKeyResolver}'
  #            redis-rate-limiter.replenishRate: 20
  #            redis-rate-limiter.burstCapacity: 40
      default-filters:
        - name: CustomHystrix
          args:
            name: CustomHystrix
            fallbackUri: forward:/fallback
            timeout:
              # 熔断单位是 ms
              # 可以自定义不同路由URL的超时时间，根据-来代替路劲/。default 代表默认的超时熔断时间
              default: 3000
              order-remote: 1
  # reids 配置
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    #    password: 123456
    timeout: 5000
    # redis连接池
    lettuce:
      pool:
        maxIdle: 20
        minIdle: 0
        maxActive: 10
        maxWait: 5000
# actuator 监控项
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
# hystrix 信号量隔离，3秒后自动超时
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 3000
  shareSecurityContext: true


# LB 配置
ribbon:
  secure-ports:
  http:
    client:
      enabled: true
#ribbon:
#  ServerListRefreshInterval: 1000
#  OkToRetryOnAllOperations: true
#  MaxAutoRetriesNextServer: 3
#  MaxAutoRetries: 1
#  ReadTimeout: 5000
#  ConnectTimeout: 3000
#  retryableStatusCodes: 404,500,503
